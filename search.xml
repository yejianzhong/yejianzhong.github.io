<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title></title>
    <url>%2F2019%2F11%2F13%2FFLUXWMSSOAP%E5%BC%80%E5%8F%91%E8%AF%B4%E6%98%8E%E4%B9%A6%2F</url>
    <content type="text"><![CDATA[​ 上海富勒信息技术有限公司产品研发部文档 主题： FLUX WMS DATAHUB API 内容摘要 本文详细描述了FLUX Datahub 系统上已发布的WMS API 接口的技术细节 文档编号 FLUX_DOC_DATAHUB_0000004 最新版本号 发布日期 文档类别 保密级别 1.3 2014-6-03 技术类 公开 目 录 第1章 前言……………………………………………………………………………………………………. 4 1.1 概述……………………………………………………………………………………………………………………………… 4 1.2 目的……………………………………………………………………………………………………………………………… 4 1.3 阅读对象………………………………………………………………………………………………………………………. 4 1.4 修订记录………………………………………………………………………………………………………………………. 4 第2章 基本技术约定………………………………………………………………………………………… 5 2.1 接口协议………………………………………………………………………………………………………………………. 5 2.2 接口方式和调用地址……………………………………………………………………………………………………. 5 2.3 值类型说明…………………………………………………………………………………………………………………… 5 2.4 注意事项………………………………………………………………………………………………………………………. 5 第3章 参数说明………………………………………………………………………………………………. 6 3.1 方法名输入参数说明……………………………………………………………………………………………………. 6 3.2 方法名输出参数说明……………………………………………………………………………………………………. 6 第4章 FLUX WMS API 详解…………………………………………………………………………….. 7 4.1 商品资料………………………………………………………………………………………………………………………. 7 4.1.1 接口调用说明……………………………………………………………………………………………………….. 7 4.1.2 接口调用方法说明………………………………………………………………………………………………… 7 4.1.3 接口返回值说明…………………………………………………………………………………………………. 18 4.2 客户资料…………………………………………………………………………………………………………………….. 19 4.2.1 接口调用说明……………………………………………………………………………………………………… 19 4.2.2 接口调用方法说明……………………………………………………………………………………………… 19 4.2.3 接口返回值说明…………………………………………………………………………………………………. 33 4.3 供应商资料…………………………………………………………………………………………………………………. 33 4.3.1 接口调用说明……………………………………………………………………………………………………… 34 4.3.2 接口调用方法说明……………………………………………………………………………………………… 34 4.3.3 接口返回值说明…………………………………………………………………………………………………. 48 4.4 WMS入库单……………………………………………………………………………………………………………….. 48 4.4.1 接口调用说明……………………………………………………………………………………………………… 48 4.4.2 接口调用方法说明……………………………………………………………………………………………… 49 4.4.3 接口返回值说明…………………………………………………………………………………………………. 70 4.5 WMS出库单……………………………………………………………………………………………………………….. 70 4.5.1 接口调用说明……………………………………………………………………………………………………… 70 4.5.2 接口调用方法说明……………………………………………………………………………………………… 71 4.5.3 接口返回值说明…………………………………………………………………………………………………. 91 4.6 入库取消…………………………………………………………………………………………………………………….. 91 4.6.1 接口调用说明……………………………………………………………………………………………………… 91 4.6.2 接口调用方法说明……………………………………………………………………………………………… 92 4.6.3 接口返回值说明…………………………………………………………………………………………………. 93 4.7 出库取消…………………………………………………………………………………………………………………….. 93 4.7.1 接口调用说明……………………………………………………………………………………………………… 94 4.7.2 接口调用方法说明……………………………………………………………………………………………… 94 4.7.3 接口返回值说明…………………………………………………………………………………………………. 95 4.8 4.8 库存核对…………………………………………………………………………………………………………….. 96 4.8.1 接口调用说明……………………………………………………………………………………………………… 96 4.8.2 接口调用方法说明……………………………………………………………………………………………… 96 4.8.3 接口返回值说明…………………………………………………………………………………………………. 98 4.9 WMS自定义数据查询………………………………………………………………………………………………. 100 4.9.1 接口调用说明…………………………………………………………………………………………………… 100 4.9.2 接口调用方法说明……………………………………………………………………………………………. 101 4.9.3 接口返回值说明……………………………………………………………………………………………….. 102 第1章 前言1.1 概述本文详细说明了FLUX Datahub Webservice中发布的FLUX WMS API技术细节及调用方式,提供标准的对接技术参数。便于FLUX WMS 与上下游系统之间数据的自动化传输。 1.2 目的给FLUX 顾问做接口需求规格说明书参考使用；给客户系统与FLUX WMS 之间系统对接时开发依据。 1.3 阅读对象WMS 顾问、技术人员、API调用者 1.4 修订记录第2章 基本技术约定2.1 接口协议双方采用WEBSERVICE技术，通过SOAP协议实现双方系统数据的交互。数据统一使用UTF-8字符集。 2.2 接口方式和调用地址双方采用WEBSERVICE技术，通过SOAP协议实现双方系统数据的交互。双方系统互相调用对方方法时，被调用方必须将调用是否成功的消息（标记+描述）返回对方。如果调用失败，可以通过重试机制重新调用。 Ø Webservie接口调用地址： http://IP号:端口号/datahubWeb/FLUXWMSSOAP Ø Webservie-WSDL接口调用地址： http://IP号:端口号/datahubWeb/FLUXWMSSOAP?wsdl 2.3 值类型说明当设计到传输时间类型的值时，均采用统一的时间格式传输 (YYYY-MM-DD HH:NN:SS)格式，如: 2014-01-01 01:01:01 2.4 注意事项WEBSERVICE发布的字段区分大小写，请以文档的字段为准，切勿自行改动字段大小写。 第3章 参数说明3.1 方法名输入参数说明每个方法名输入参数一般由三部分组成，取消订单由前两部分组成。 Ø 第一部分：wmsSecurityInfo：接口安全性校验 所含字段： Password： 密码，可修改 Username： 用户名，可修改 Ø 第二部分：wmsParam 部分：系统应用级参数 所含字段： messageid： 接口代码，每个接口都有唯一的接口ID param ：调用WMS存储过程时用到的参数，一般用于订单取消接口，其他接口可为空值 warehouseid： 指定数据实际作业仓库DB，如WH01 stdno： 接口业务类型，一种业务类型可对应多个接口代码 如：SKU 代表产品 Freight代表商品类别 Customer 代表客户 ASN 代表标准入库 SO 代表标准出库 INV_Q 代表库存核对 Customerid ：接口项目客户名 Ø 第三部分：业务数据部分 3.2 方法名输出参数说明处理结果参数wmsResultInfo,所含字段说明如下： returnFlag ：成功失败标记 。1 成功 0 失败 2 部分成功 returnCode ：成功失败代码。0000 成功 ，其它失败 returnDesc : 成功失败原因描述 resultInfo : 一般用于错误结果列表（字符串数组） 第4章 FLUX WMS API 详解4.1 商品资料传递商品信息（SKU）到FLUX WMS 4.1.1 接口调用说明触发事件：创建或修改商品资料时，调用FLUX WMS商品资料接口，支持批量。 服务提供方：FLUX WMS 调用方：客户系统 接口方向：客户èFLUX WMS 4.1.2 接口调用方法说明方法名：putSKUData 方法说明：putSKUData输入参数由wmsSecurityInfo, skuInfo, wmsParam三部分组成。 wmsResultInfo putSKUData(wmsSecurityInfo, skuInfo, wmsParam){ …… } Ø 输入参数结构及说明 ü 安全校验参数: wmsSecurityInfo { String username; // 用户名 可设置 String password; // 密码 可设置 } ü 商品资料记录 skuInfo { wmsSkuHeader[] { } } ü 接口参数定义 wmsParam { String warehouseid; //仓库ID , 如”WH01” String customerid; //DATAHUB项目客户名，固定” FLUXWMSSOAP “ String messageid; //接口代码, 固定值 “SKU” String stdno; //接口业务类型, 固定值 “SKU” } Ø 业务数据说明 Ø SOAP请求样例： &lt;soapenv:Envelope xmlns:soapenv=”http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:data=”http://data.ws.datahub/&quot;&gt; soapenv:Header/ soapenv:Body data:putSKUData 4.1.3 接口返回值说明Ø putSKUData输出参数wmsResultInfo wmsResultInfo { ​ String returnFlag; //成功失败标记 1 成功 0 失败， 2部分成功，0 表示此次传输记录全部失败 ​ String returnCode; //结果代码 ​ String returnDesc; //结果代码描述 ​ String[] resultInfo ; //详细错误信息,当 resultFlag值为2时，必须处理此字段内容， 每条记录代表一条业务记录错误信息，记录可以有多条。 每个resultInfo 字段值结构举例如下： customerid = KWE ; sku = Sku001 ; errorcode = S002 ; errordescr = 系统错误 } Ø SOAP返回样例： &lt;SOAP-ENV:Envelope xmlns:SOAP-ENV=”http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ns1=”http://data.ws.datahub/&quot;&gt; SOAP-ENV:Header/ SOAP-ENV:Body ns1:putSKUDataResponse 0000 成功 1 4.2 客户资料传递客户信息到WMS 4.2.1 接口调用说明触发事件：创建或修改客户信息资料时，调用FLUX WMS客户资料接口，支持批量。 服务提供方：FLUX WMS 调用方：客户系统 接口方向：客户èFLUX WMS 4.2.2 接口调用方法说明方法名： putCustData 方法说明：putCustData输入参数由wmsSecurityInfo, custInfo, wmsParam三部分组成。 wmsResultInfo putCustData (wmsSecurityInfo, custInfo,wmsParam){ …… } Ø 输入参数结构及说明 ü 安全校验参数: wmsSecurityInfo { String username; // 用户名 可设置 String password; // 密码 可设置 } ü 客户信息 custInfo { wmsCustHeader[] { } } ü 接口参数定义 wmsParam { String warehouseid; //仓库ID , 如”WH01” String customerid; //DATAHUB项目客户名，固定”FLUXWMSSOAP” String messageid; //接口代码, 固定值 “ CUSTOMER” String stdno; //接口业务类型, 固定值 “ Customer” } Ø 业务数据说明 Ø SOAP请求样例： &lt;soapenv:Envelope xmlns:soapenv=”http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:data=”http://data.ws.datahub/&quot;&gt; soapenv:Header/ soapenv:Body data:putCustData 4.2.3 接口返回值说明Ø putCustData输出参数wmsResultInfo wmsResultInfo { String returnFlag; //成功失败标记 1 成功 0 失败， 2 部分成功 0 表示此次传输记录全部失败 ​ String returnCode; //结果代码 ​ String returnDesc; //结果代码描述 ​ String[] resultInfo ; //详细错误信息,当 resultFlag值为2时，必须处理此字段内容， 每条记录代表一条业务记录错误信息，记录可以有多条。 每个resultInfo 字段值结构举例如下： customerid = KWE ; customertype = CO ; errorcode = S002 ; errordescr = 系统错误 } Ø SOAP返回样例： &lt;SOAP-ENV:Envelope xmlns:SOAP-ENV=”http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ns1=”http://data.ws.datahub/&quot;&gt; SOAP-ENV:Header/ SOAP-ENV:Body ns1:putCustDataResponse 0000 成功 1 4.3 供应商资料传递供应商信息到WMS 4.3.1 接口调用说明触发事件：创建或修改供应商信息资料时，调用FLUX WMS客户资料接口，支持批量。 服务提供方：FLUX WMS 调用方：客户系统 接口方向：客户èFLUX WMS 4.3.2 接口调用方法说明方法名： putCustData 方法说明：putCustData输入参数由wmsSecurityInfo, custInfo, wmsParam三部分组成。 wmsResultInfo putCustData (wmsSecurityInfo, custInfo,wmsParam){ …… } Ø 输入参数结构及说明 ü 安全校验参数: wmsSecurityInfo { String username; // 用户名 可设置 String password; // 密码 可设置 } ü 客户信息 custInfo { wmsCustHeader[] { } } ü 接口参数定义 wmsParam { String warehouseid; //仓库ID , 如”WH01” String customerid; //DATAHUB项目客户名，如”KWE” String messageid; //接口代码, 固定值 “101_S” String stdno; //接口业务类型, 固定值 “Customer” } Ø 业务数据说明 Ø SOAP请求样例： &lt;soapenv:Envelope xmlns:soapenv=”http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:data=”http://data.ws.datahub/&quot;&gt; soapenv:Header/ soapenv:Body data:putCustData 4.3.3 接口返回值说明Ø putCustData输出参数wmsResultInfo wmsResultInfo { String returnFlag; //成功失败标记 1 成功 0 失败， 2 部分成功 0 表示此次传输记录全部失败 ​ String returnCode; //结果代码 ​ String returnDesc; //结果代码描述 ​ String[] resultInfo ; //详细错误信息,当 resultFlag值为2时，必须处理此字段内容， 每条记录代表一条业务记录错误信息，记录可以有多条。 每个resultInfo 字段值结构举例如下： customerid = KWE ; customertype = VE ; errorcode = S002 ; errordescr = 系统错误 } Ø SOAP返回样例： &lt;SOAP-ENV:Envelope xmlns:SOAP-ENV=”http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ns1=”http://data.ws.datahub/&quot;&gt; SOAP-ENV:Header/ SOAP-ENV:Body ns1:putCustDataResponse 0000 成功 1 4.4 WMS入库单传递入库单信息到WMS 4.4.1 接口调用说明触发事件：创建或修改入库单时，调用FLUX WMS客户资料接口，支持批量。 服务提供方：FLUX WMS 调用方：客户系统 接口方向：客户èFLUX WMS 4.4.2 接口调用方法说明Ø 方法名： putASNData 方法说明：putASNData输入参数由wmsSecurityInfo, asnInfo, wmsParam三部分组成。 wmsResultInfo putASNData**(wmsSecurityInfo, asnInfo, wmsParam){** …… } Ø 输入参数结构及说明 ü 安全校验参数: wmsSecurityInfo { String username; // 用户名 可设置 String password; // 密码 可设置 } ü 入库单记录 asnInfo { wmsASNHeaders [] { ​ ​ detailsItem[] { } } } ü 接口参数定义 wmsParam { String warehouseid; //仓库ID , 如”WH01” String customerid; //DATAHUB项目客户名，固定值：“FLUXWMSSOAP” String messageid; //接口代码, 不同业务类型的入库单，接口代码不同，需确保每个接口代码的唯一性，如采购入库messageid 是104，其他入库messageid 是104_S,可自行定义messageid,标准接口固定为“ASN”。 String stdno; //接口业务类型, 固定值 “ASN” } Ø 业务数据说明 ü ASN_HEADER ü ASN_DETAILS Ø SOAP请求样例： &lt;soapenv:Envelope xmlns:soapenv=”http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:data=”http://data.ws.datahub/&quot;&gt; soapenv:Header/ soapenv:Body data:putASNData 4.4.3 接口返回值说明Ø putASNData输出参数wmsResultInfo wmsResultInfo { String returnFlag; //成功失败标记 1 成功 0 失败， 2 部分成功 0 表示此次传输记录全部失败 ​ String returnCode; //结果代码 ​ String returnDesc; //结果代码描述 ​ String[] resultInfo ; //详细错误信息,当 resultFlag值为2时，必须处理此字段内容， 每条记录代表一条业务记录错误信息，记录可以有多条。 每个resultInfo 字段值结构举例如下： customerid = KWE ; orderno= order01 ; ordertype= TR ; errorcode = S002 ; errordescr = 系统错误 } Ø SOAP返回样例： &lt;SOAP-ENV:Envelope xmlns:SOAP-ENV=”http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ns1=”http://data.ws.datahub/&quot;&gt; SOAP-ENV:Header/ SOAP-ENV:Body ns1:putASNDataResponse 0000 成功 1 4.5 WMS出库单传递出库单信息到WMS 4.5.1 接口调用说明触发事件：创建或修改出库时，调用FLUX WMS客户资料接口，支持批量。 服务提供方：FLUX WMS 调用方：客户系统 接口方向：客户èFLUX WMS 4.5.2 接口调用方法说明Ø 方法名： putSOData 方法说明：putSOData输入参数由wmsSecurityInfo, soInfo, wmsParam三部分组成。 wmsResultInfo putSOData**(wmsSecurityInfo, soInfo, wmsParam){** } Ø 输入参数结构及说明 ü 安全校验参数: wmsSecurityInfo { String username; // 用户名 可设置 String password; // 密码 可设置 } ü 出库单记录: soInfo { wmsSOHeaders [] { ​ detailsItem[] { ​ } } } ü 接口参数定义 wmsParam { String warehouseid; //仓库ID , 如”WH01” String customerid; //DATAHUB项目客户名，固定值“FLUXWMSSOAP” String messageid; //接口代码, 不同业务类型的出库单，接口代码不同，需确保每个接口代码的唯一性，如销售出库messageid 是106，其他出库messageid 是106_S,可自行定义messageid,标准接口固定为“SO”。 String stdno; //接口业务类型, 固定值 “SO” } Ø 业务数据说明 ü DOC_ORDER_HEADER ü DOC_ORDER_DETAILS Ø SOAP请求样例： &lt;soapenv:Envelope xmlns:soapenv=”http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:data=”http://data.ws.datahub/&quot;&gt; soapenv:Header/ soapenv:Body data:putSOData 4.5.3 接口返回值说明Ø putSOData输出参数wmsResultInfo wmsResultInfo { String returnFlag; //成功失败标记 1 成功 0 失败， 2 部分成功 0 表示此次传输记录全部失败 String returnCode; //结果代码 ​ String returnDesc; //结果代码描述 ​ String[] resultInfo ; //详细错误信息,当 resultFlag值为2时，必须处理此字段内容， 每条记录代表一条业务记录错误信息，记录可以有多条。 每个resultInfo 字段值结构举例如下： customerid = KWE ; orderno= order01 ; ordertype= CK ; errorcode = S002 ; errordescr = 系统错误 } Ø SOAP返回样例： &lt;SOAP-ENV:Envelope xmlns:SOAP-ENV=”http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ns1=”http://data.ws.datahub/&quot;&gt; SOAP-ENV:Header/ SOAP-ENV:Body ns1:putSODataResponse 0000 成功 1 4.6 入库取消取消FLUX WMS入库单据。WMS取消入库作业，修改单据状态为取消状态 4.6.1 接口调用说明触发事件：客户进行入库订单撤消时下达指令给WMS，不支持批量。 服务提供方：FLUX WMS 调用方：客户系统 接口方向：客户èFLUX WMS 4.6.2 接口调用方法说明Ø 方法名：processSP 方法说明：processSP输入参数由wmsSecurityInfo, wmsParam二部分组成。 wmsResultInfoprocessSP(wmsSecurityInfo,wmsParam){ … } Ø 输入参数结构及说明 ü 安全校验参数: wmsSecurityInfo { String username; // 用户名 可设置 String password; // 密码 可设置 } ü 接口参数定义: wmsParam { String warehouseid; //仓库ID , 如”WH01” String customerid; //DATAHUB项目客户名，标准接口固定值“FLUXWMSSOAP” String messageid; //接口代码, 固定值 “ASNC” String stdno;//接口业务类型, 固定值 “CANCEL” Stirng param[0]; // ORDERNO需取消的订单号 param[1]; //CUSTOMERID货主ID } Ø 业务数据说明 Ø SOAP请求样例： &lt;soapenv:Envelope xmlns:soapenv=”http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:data=”http://data.ws.datahub/&quot;&gt; soapenv:Header/ soapenv:Body data:processSP ASN00001 KWE 4.6.3 接口返回值说明Ø processSP输出参数wmsResultInfo wmsResultInfo { String returnFlag; //成功失败标记 1 成功 0 失败 ​ String returnCode; //结果代码 ​ String returnDesc; //结果代码描述 } Ø SOAP返回样例： &lt;SOAP-ENV:Envelope xmlns:SOAP-ENV=”http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ns1=”http://data.ws.datahub/&quot;&gt; SOAP-ENV:Header/ SOAP-ENV:Body ns1:processSPResponse Success 0000 1 4.7 出库取消取消WMS出库单据。Wms 取消出库作业，修改单据状态为取消状态 4.7.1 接口调用说明触发事件：客户进行出库订单撤消时下达指令给WMS，不支持批量。 服务提供方：FLUX WMS 调用方：客户系统 接口方向：客户èFLUX WMS 4.7.2 接口调用方法说明Ø 方法名：processSP 方法说明：processSP输入参数由wmsSecurityInfo, wmsParam二部分组成。 wmsResultInfoprocessSP(wmsSecurityInfo,wmsParam){ … } Ø 输入参数结构及说明 ü 安全校验参数: wmsSecurityInfo { String username; // 用户名 可设置 String password; // 密码 可设置 } ü 接口参数定义: wmsParam { String warehouseid; //仓库ID , 如”WH01” String customerid; //DATAHUB项目客户名，如” FLUXWMSSOAP “ String messageid; //接口代码, 固定值 “SOC” String stdno;//接口业务类型, 固定值 “ CANCEL “ Stirng param[0]; // ORDERNO需取消的订单号 param[1]; //CUSTOMERID货主ID } Ø 业务数据说明 Ø SOAP请求样例： &lt;soapenv:Envelope xmlns:soapenv=”http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:data=”http://data.ws.datahub/&quot;&gt; soapenv:Header/ soapenv:Body data:processSP SO00001 KWE 4.7.3 接口返回值说明Ø processSP输出参数wmsResultInfo wmsResultInfo { ​ String returnFlag; //成功失败标记 1 成功 0 失败 ​ String returnCode; //结果代码 ​ String returnDesc; //结果代码描述 } Ø SOAP返回样例(成功)： &lt;SOAP-ENV:Envelope xmlns:SOAP-ENV=”http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ns1=”http://data.ws.datahub/&quot;&gt; SOAP-ENV:Header/ SOAP-ENV:Body ns1:processSPResponse Success 0000 1 Ø SOAP返回样例(失败)： &lt;SOAP-ENV:Envelope xmlns:SOAP-ENV=”http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ns1=”http://data.ws.datahub/&quot;&gt; SOAP-ENV:Header/ SOAP-ENV:Body &lt;ws:processSPResponse xmlns:ws=”http://data.ws.datahub/&quot;&gt; S010 中文描述 0 4.8 4.8 库存核对客户查询库存，WMS接到指令后返回当前系统库存信息。此接口WMS默认查询视图为EDI_SKUS_INV，视图名可配置。 4.8.1 接口调用说明触发事件：客户调用WMS库存查询。 服务提供方：FLUX WMS 调用方：客户系统 接口方向：客户èFLUX WMS 4.8.2 接口调用方法说明Ø 方法名：getINVSkuData 方法说明：getINVSkuData输入参数由wmsSecurityInfo, wmsParam，storeid, wmsSkuList四部分组成。 wmsResultInfogetINVSkuData (wmsSecurityInfo,wmsParam，storeid, wmsSkuList){ … } Ø 输入参数结构及说明 ü 安全校验参数: wmsSecurityInfo { String username; // 用户名 可设置 String password; // 密码 可设置 } ü 接口参数定义: wmsParam { String warehouseid; //仓库ID , 如”WH01” String customerid; //DATAHUB项目客户名，标准接口固定值“FLUXWMSSOAP” String messageid; //接口代码, 固定值 “101INV” String stdno;//接口业务类型, 固定值 “INVQ” Stirng param[0]; //每次显示的行数，为空时，查询全部 } storeid: 货主ID wmsSkuList[]: SKU代码,可多个 为空时，查询全部SKU Ø 业务数据说明 Ø SOAP请求样例： &lt;soapenv:Envelope xmlns:soapenv=”http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:data=”http://data.ws.datahub/&quot;&gt; soapenv:Header/ soapenv:Body data:getINVSkuData 4.8.3 接口返回值说明Ø getINVSkuData输出参数wmsINVInfo wmsINVInfo { wmsResultInfo { ​ String returnFlag; //成功失败标记 1 成功 0 失败 ​ String returnCode; //结果代码 ​ String returnDesc; //结果代码描述 String resultInfo; //查询结果记录数 } wmsINVHeader[] { ​ String ASTOCKQTY; ​ String QTY; ​ String QTYOK; ​ String QTYALLOCATED; ​ String QTYMVIN; ​ String QTYMVOUT; ​ String QTYRPIN; ​ String QTYONHOLD ; ​ String LOCATIONID; ​ String ZONEGROUP; ​ String CUSTOMERID; ​ String SKU; String WAREHOUSEID; String h_EDI_01; ​ String h_EDI_02; ​ String h_EDI_03; ​ String h_EDI_04; String h_EDI_05; String h_EDI_06; ​ String h_EDI_07; ​ String h_EDI_08; ​ String h_EDI_09; String h_EDI_10; String LOTATT01; String LOTATT02; String LOTATT03; String LOTATT04; String LOTATT05; String LOTATT06; String LOTATT07; String LOTATT08; String LOTATT09; String LOTATT10; } } Ø SOAP返回样例： ü 无库存信息时： &lt;SOAP-ENV:Envelope xmlns:SOAP-ENV=”http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ns1=”http://data.ws.datahub/&quot;&gt; SOAP-ENV:Header/ SOAP-ENV:Body ns1:getINVSkuDataResponse NO REOCRD 未找到信息 0 ü 有库存信息时： &lt;SOAP-ENV:Envelope xmlns:SOAP-ENV=”http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ns1=”http://data.ws.datahub/&quot;&gt; SOAP-ENV:Header/ SOAP-ENV:Body/ ns1:getINVSkuDataResponse 700.00000000 S S KWE 06130825_6666606130825 WH01 6666606130825 N 1 0000 1 4.9 WMS自定义数据查询根据客户传递的查询条件，查询WMS系统的表或视图，并将自定义结果集返回给客户。 4.9.1 接口调用说明触发事件：调用WMS自定义数据查询接口查询WMS系统数据，支持批量返回。 服务提供方：FLUX WMS 调用方：客户系统 接口方向：客户èFLUX WMS 4.9.2 接口调用方法说明Ø 方法名：processSPM 方法说明：processSPM输入参数由wmsSecurityInfo, wmsParam二部分组成。 wmsSPResultInfoprocessSPM(wmsSecurityInfo,wmsParam){ … } Ø 输入参数结构及说明 ü 安全校验参数: wmsSecurityInfo { String username; // 用户名 可设置 String password; // 密码 可设置 } ü 接口参数定义 wmsParam { String warehouseid; //仓库ID , 如”WH01” String customerid; //DATAHUB项目客户名，如”KWE” String messageid; //接口代码,不同的自定义查询接口，其接口代码不同，需确保每个接口代码的唯一性，如自定义接口1，messageid 是QUE_ASN；其他自定义查询接口，messageid 是QUE_SO,可自行定义messageid。 String stdno; //接口类别, 固定值 “QUE” Stirng param[0]; // 自定义查询字段，支持多个（查询字段1） param[1]; //（查询字段2） …… } Ø 业务数据说明 Ø SOAP请求样例： &lt;soapenv:Envelope xmlns:soapenv=”http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:data=”http://data.ws.datahub/&quot;&gt; soapenv:Header/ soapenv:Body data:processSPM 4.9.3 接口返回值说明Ø processSPM输出参数wmsSPResultInfo wmsSPResultInfo { wmsResultInfo { ​ String returnFlag; //成功失败标记 1 成功 0 失败 ​ String returnCode; //结果代码 ​ String returnDesc; //结果代码描述 } wmsSPRecord detailsItem [] { String FIELD1; //自定义返回字段1 String FIELD2; //自定义返回字段2 String FIELD3; //自定义返回字段 3 …… } } Ø SOAP返回样例： &lt;SOAP-ENV:Envelope xmlns:SOAP-ENV=”http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ns1=”http://data.ws.datahub/&quot;&gt; SOAP-ENV:Header/ SOAP-ENV:Body ns1:processSPMResponse Success 0000 1 KEW 12091401_6666612091401 N 40.00000000 6666612091405 4.10 WMS采购入库单传递采购入库单信息到WMS 4.10.1 接口调用说明触发事件：创建或修改采购入库单时，调用FLUX WMS采购入库单接口，支持批量。 服务提供方：FLUX WMS 调用方：客户系统 接口方向：客户èFLUX WMS 4.10.2 接口调用方法说明Ø 方法名： putPOData 方法说明：putPOData输入参数由wmsSecurityInfo, poInfo, wmsParam三部分组成。 wmsResultInfo putPOData**(wmsSecurityInfo, poInfo, wmsParam){** …… } Ø 输入参数结构及说明 ü 安全校验参数: wmsSecurityInfo { String username; // 用户名 可设置 String password; // 密码 可设置 } ü 入库单记录 poInfo { wmsPOHeaders [] { ​ detailsItem[] { } } } ü 接口参数定义 wmsParam { String warehouseid; //仓库ID , 如”WH01” String customerid; //DATAHUB项目客户名，固定值：“FLUXWMSSOAP” String messageid; //接口代码, 不同业务类型的入库单，接口代码不同，需确保每个接口代码的唯一性，如采购入库messageid 是104，其他入库messageid 是104_S,可自行定义messageid,标准接口固定为“PO”。 String stdno; //接口业务类型, 固定值 “PO” } Ø 业务数据说明 PO_HEADER PO_DETAILS Ø SOAP请求样例： &lt;soapenv:Envelope xmlns:soapenv=”http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:data=”http://data.ws.datahub/&quot;&gt; soapenv:Header/ soapenv:Body ​ data:putPOData ​ ​ ​ ​ ? ​ ​ ? ​ ​ ​ ​ ​ ​ ​ ? ​ ​ ? ​ ​ ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ​ ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ​ ​ ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ ? ​ ​ 4.10.3 接口返回值说明Ø putPOData输出参数wmsResultInfo wmsResultInfo { String returnFlag; //成功失败标记 1 成功 0 失败， 2 部分成功 0 表示此次传输记录全部失败 ​ String returnCode; //结果代码 ​ String returnDesc; //结果代码描述 ​ String[] resultInfo ; //详细错误信息,当 resultFlag值为2时，必须处理此字段内容， 每条记录代表一条业务记录错误信息，记录可以有多条。 每个resultInfo 字段值结构举例如下： customerid = KWE ; POREFERENCE1 = order01 ; POTYPE = TR ; errorcode = S002 ; errordescr = 系统错误 } Ø SOAP返回样例： &lt;SOAP-ENV:Envelope xmlns:SOAP-ENV=”http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ns1=”http://data.ws.datahub/&quot;&gt; SOAP-ENV:Header/ SOAP-ENV:Body ​ ns1:putPODataResponse ​ ​ WAREHOUSEID = WH01 ; POREFERENCE1 = TEST02 ; POTYPE = ; CUSTOMERID = 0 ; errorcode = S102 ; errordescr = SKU 不存在20004859AA ​ PART_ERROR ​ 成功 ​ 2 ​ ​ 4.11 WMS销售订单传递销售订单信息到WMS 4.11.1 接口调用说明触发事件：创建或修改销售订单时，调用FLUX WMS销售订单接口，支持批量。 服务提供方：FLUX WMS 调用方：客户系统 接口方向：客户èFLUX WMS 4.11.2 接口调用方法说明Ø 方法名： putSALESData 方法说明：putSALESData输入参数由wmsSecurityInfo, wmsSALESInfo, wmsParam三部分组成。 wmsResultInfo putSALESData (wmsSecurityInfo, wmsSALESInfo, wmsParam){ …… } Ø 输入参数结构及说明 ü 安全校验参数: wmsSecurityInfo { String username; // 用户名 可设置 String password; // 密码 可设置 } ü 销售单记录 wmsSALESInfo { wmsSALESHeader [] { ​ detailsItem[] { } } } ü 接口参数定义 wmsParam { String warehouseid; //仓库ID , 如”WH01” String customerid; //DATAHUB项目客户名，固定值：“FLUXWMSSOAP” String messageid; //接口代码,固定为“SALES”。 String stdno; //接口业务类型, 固定值 “SALES” } Ø 业务数据说明 SALESORDER_HEADER SALES_DETAILS SOAP请求样例 &lt;soapenv:Envelope xmlns:soapenv=”http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:data=”http://data.ws.datahub/&quot;&gt; soapenv:Header/ soapenv:Body ​ data:putSALESData ​ ​ ? ​ ? ​ ​ ​ ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ​ ​ ​ ? ​ ? ​ ? ​ ? ​ ​ ​ ​ ? ​ ? ​ ? ​ ? ​ ? ​ ? ​ ​ 4.11.3 接口返回值说明Ø putPOData输出参数wmsResultInfo wmsResultInfo { String returnFlag; //成功失败标记 1 成功 0 失败， 2 部分成功 0 表示此次传输记录全部失败 ​ String returnCode; //结果代码 ​ String returnDesc; //结果代码描述 ​ String[] resultInfo ; //详细错误信息,当 resultFlag值为2时，必须处理此字段内容， 每条记录代表一条业务记录错误信息，记录可以有多条。 每个resultInfo 字段值结构举例如下： SOREFERENCE1 = TEST001 ; errorcode = S102 ; errordescr = SKU 不存在PX404011731401 } Ø SOAP返回样例： &lt;SOAP-ENV:Envelope xmlns:SOAP-ENV=”http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ns1=”http://data.ws.datahub/&quot;&gt; SOAP-ENV:Header/ SOAP-ENV:Body ​ ns1:putSALESDataResponse ​ ​ SOREFERENCE1 = TEST001 ; errorcode = S102 ; errordescr = SKU 不存在PX404011731401 ​ PART_ERROR ​ 成功 ​ 2 ​ ​ 第5章 错误代码 代码 描述 0000 成功 S001 验签错误 S002 系统异常 S003 数据错误 S004 货主错误 S006 记录已存在且不允许修改 S007 其他错误 S008 参数异常 S009 接口未授权 S010 逻辑错误 上海富勒信息科技有限公司 ©版权所有 URL：www.flux.com.cn E-mail：info@flux.com.cn 我们将竭力为您提供满意的服务。]]></content>
  </entry>
  <entry>
    <title><![CDATA[DATAHUB_TEST]]></title>
    <url>%2F2019%2F09%2F14%2FDATAHUB_TEST%2F</url>
    <content type="text"><![CDATA[DATAHUB新建文档测试DATAHUB问题记录：以下为代码块显示测试123456789101112memParam.clear(); memParam.add(MsgListCustStrCVal.ORGANIZATIONID, organizationId); memParam.add(MsgListCustStrCVal.DATAHUB_CUSTOMERID, datahubCustomerId); memParam.add(MsgListCustStrCVal.MESSAGEID, messageId); memParam.addNoIn(MsgListCustStrCVal.MESSAGETYPE, "H"); memParam.addNoIn(MsgListCustStrCVal.INOUT, "O"); BizComponent bizMsgType = MemConfigUtils.getInstance().getMsgConfig(MsgListCustStrCVal.CACHE_ID, memParam); List&lt;String&gt; detailStdTable = new ArrayList&lt;String&gt;(); for (RecordMap&lt;String, Object&gt; record : bizMsgType.getRecords()) &#123; detailStdTable.add(tableUtil.getStdTable(organizationId, datahubCustomerId, messageId, stdNo, record.getFieldValue(DatahubCommonCVal.MESSAGETYPE), messageGroupSysId)); &#125;]]></content>
      <categories>
        <category>DATAHUB_TEST</category>
      </categories>
      <tags>
        <tag>DATAHUB_TEST</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[DATAHUB]]></title>
    <url>%2F2019%2F09%2F06%2FDATAHUB%2F</url>
    <content type="text"><![CDATA[DATAHUB DATAHUB问题记录： 以下为代码块显示测试 123456789101112memParam.clear(); memParam.add(MsgListCustStrCVal.ORGANIZATIONID, organizationId); memParam.add(MsgListCustStrCVal.DATAHUB_CUSTOMERID, datahubCustomerId); memParam.add(MsgListCustStrCVal.MESSAGEID, messageId); memParam.addNoIn(MsgListCustStrCVal.MESSAGETYPE, "H"); memParam.addNoIn(MsgListCustStrCVal.INOUT, "O"); BizComponent bizMsgType = MemConfigUtils.getInstance().getMsgConfig(MsgListCustStrCVal.CACHE_ID, memParam); List&lt;String&gt; detailStdTable = new ArrayList&lt;String&gt;(); for (RecordMap&lt;String, Object&gt; record : bizMsgType.getRecords()) &#123; detailStdTable.add(tableUtil.getStdTable(organizationId, datahubCustomerId, messageId, stdNo, record.getFieldValue(DatahubCommonCVal.MESSAGETYPE), messageGroupSysId)); &#125;]]></content>
      <categories>
        <category>DATAHUB</category>
      </categories>
      <tags>
        <tag>DATAHUB</tag>
      </tags>
  </entry>
</search>
